/** *dianping.com Inc *Copyright(c)2004-2015 All Rights Reserved. */package com.dianping.merchant.service.repository.processor;import com.dianping.merchant.service.repository.annotations.Processor;import org.springframework.beans.BeansException;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ApplicationObjectSupport;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.Map;/** * @author zhangjie * @version $Id: BusinessProcessorHandler.java, v 0.1 2015-11-16 下午6:02 zhangjie Exp $$ */@Servicepublic class BusinessProcessorHandler extends ApplicationObjectSupport {    private Map<String, BusinessProcessor> processorFactory = new HashMap<String, BusinessProcessor>();    public BusinessProcessor getProcessor(String bizType) {        if (processorFactory.containsKey(bizType)) {            return processorFactory.get(bizType);        }        return null;    }    @Override    protected void initApplicationContext(ApplicationContext context) throws BeansException {        super.initApplicationContext(context);        Map<String, BusinessProcessor> beanMap = context.getBeansOfType(BusinessProcessor.class);        for (Map.Entry entry : beanMap.entrySet()) {            BusinessProcessor processor = (BusinessProcessor) entry.getValue();            if (processor.getClass().isAnnotationPresent(Processor.class)) {                Processor han = processor.getClass().getAnnotation(Processor.class);                processorFactory.put(han.value(), processor);            }        }    }}